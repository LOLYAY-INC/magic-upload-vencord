/**
 * @name MagicUpload
 * @website https://github.com/mack/magic-upload
 * @source 
 */

module.exports = (() => {
    const config = {"main":"bundled.js","info":{"name":"Magic Upload","authors":[{"name":"Mack","discord_id":"365247132375973889","github_username":"mack","twitter_username":"mackboudreau"}],"version":"0.0.1","description":"🧙‍♀️ A BetterDiscord plugin to automagically upload files over 8MB.","github":"https://github.com/mack/magic-upload","github_raw":""},"changelog":[],"defaultConfig":[]};

    return !global.ZeresPluginLibrary ? class {
        constructor() {this._config = config;}
        getName() {return config.info.name;}
        getAuthor() {return config.info.authors.map(a => a.name).join(", ");}
        getDescription() {return config.info.description;}
        getVersion() {return config.info.version;}
        load() {
            BdApi.showConfirmationModal("Library Missing", `The library plugin needed for ${config.info.name} is missing. Please click Download Now to install it.`, {
                confirmText: "Download Now",
                cancelText: "Cancel",
                onConfirm: () => {
                    require("request").get("https://rauenzi.github.io/BDPluginLibrary/release/0PluginLibrary.plugin.js", async (error, response, body) => {
                        if (error) return require("electron").shell.openExternal("https://betterdiscord.net/ghdl?url=https://raw.githubusercontent.com/rauenzi/BDPluginLibrary/master/release/0PluginLibrary.plugin.js");
                        await new Promise(r => require("fs").writeFile(require("path").join(BdApi.Plugins.folder, "0PluginLibrary.plugin.js"), body, r));
                    });
                }
            });
        }
        start() {}
        stop() {}
    } : (([Plugin, Api]) => {
        const plugin = (z,B)=>{"use strict";let N=require("http"),D=require("https"),M=require("url"),x=require("crypto"),w=require("fs"),{Logger:r,Patcher:h,WebpackModules:T}=B,g=T.getByProps("anyFileTooLarge","maxFileSize"),L=T.getByProps("instantBatchUpload","upload"),P=BdApi.findModuleByProps("BorderColors"),S=BdApi.findModuleByProps("useModalsStore","closeModal"),n={oauth:{handler:{port:29842,host:"localhost"},storage:{algorithm:"aes-256-ctr",secretKey:"jXn2r5u8x/A?D*G-KaPdSgVkYp3s6v9y",iv:x.randomBytes(16),credentialsKey:"_magicupload_oa_gd"},clientId:"911268808772-r7sa3s88f2o36hdcu9g4tmih6dbo4n77.apps.googleusercontent.com",clientSecret:"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"}},R=`https://accounts.google.com/o/oauth2/v2/auth?scope=https://www.googleapis.com/auth/drive&redirect_uri=http://${n.oauth.handler.host}:${n.oauth.handler.port}&response_type=code&client_id=${n.oauth.clientId}`,C="https://oauth2.googleapis.com/token",F="https://oauth2.googleapis.com/revoke",A="https://www.googleapis.com/upload/drive/v3/files?uploadType=resumable",H=()=>'<!DOCTYPE html><html> <head> <meta charset="UTF-8"> <link rel="preconnect" href="https://fonts.googleapis.com"> <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin> <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500&family=Staatliches&display=swap" rel="stylesheet"> <title>Magic Upload - Google Drive Connected</title> <script src="https://kit.fontawesome.com/9fd6d0c095.js" crossorigin="anonymous"><\/script> </head> <body> <style> * { box-sizing: border-box; } body { max-width: 870px; margin: 0 auto; } .container { text-align: center; font-family: "Roboto", sans-serif; display: flex; justify-content: center; align-items: center; flex-direction: column; height: 90vh; position: relative; color: #363636; padding-left: 5rem; padding-right: 5rem; } .header img { width: 80px; } .header { display: flex; align-items: center; font-family: "Staatliches", cursive; font-size: 48px; margin-bottom: 0; } .header i { font-size: 18px; margin: 0 0.5rem; } p { padding: 0 2rem; margin-top: 0; font-size: 18px; line-height: 24px; } .footer { position: absolute; bottom: 1rem; font-size: 14px; opacity: 0.4; } .magic { color: #5e2de5; text-shadow: 0 8px 24px rgb(94 45 229 / 25%); } .tooltip { position: relative; display: inline-block; border-bottom: 1px dotted black; } .tooltip .tooltiptext { font-size: 16px; line-height: 20px; visibility: hidden; width: 120px; bottom: 130%; left: 50%; margin-left: -60px; background-color: rgba(0,0,0,0.9); color: #fff; text-align: center; padding: 5px 0; border-radius: 6px; opacity: 0; transition: .3s; position: absolute; z-index: 1; } .tooltip .tooltiptext::after { content: " "; position: absolute; top: 100%; left: 50%; margin-left: -5px; border-width: 5px; border-style: solid; border-color: #363636 transparent transparent transparent; } .tooltip:hover .tooltiptext { visibility: visible; opacity: 1; } a { color: #363636; transition: .3s; } a:hover{ color: #5e2de5; text-shadow: 0 8px 24px rgb(94 45 229 / 25%); } hr { width: 50px; opacity: 0.5; } </style> <div class="container"> <h1 class="header"><span class="magic">MagicUpload</span> <i class="fa-solid fa-link"></i> <img src="https://upload.wikimedia.org/wikipedia/commons/1/12/Google_Drive_icon_%282020%29.svg" /></h1> <hr> <p class="about">\u2705 You"ve successfully linked your Google Drive account! You can now upload files that exceed your discord limit and they"ll automatically uploaded to your drive.</p> <p class="help">Need any help? Checkout our <a href="https://github.com/mack/magic-upload" class="tooltip"> <i class="fa-brands fa-github"></i> <span class="tooltiptext">GitHub</span> </a> or <a href="" class="tooltip"> <i class="fa-brands fa-discord"></i> <span class="tooltiptext">Community Discord</span> </a> . </p> <span class="footer">&#169; Mackenzie Boudreau</span> </div> <script src="https://unpkg.com/scrollreveal@4.0.0/dist/scrollreveal.min.js"><\/script> <script src="https://cdn.jsdelivr.net/npm/js-confetti@latest/dist/js-confetti.browser.js"><\/script> <script> const sr = ScrollReveal({ origin: "top", distance: "60px", duration: 2500, delay: 400, }); sr.reveal(".header", {delay: 700}); sr.reveal("hr", {delay: 500}); sr.reveal(".about", {delay: 900, origin: "bottom"}); sr.reveal(".help", {delay: 1000, origin: "bottom"}); sr.reveal(".footer", {delay: 800, origin: "bottom"}); const jsConfetti = new JSConfetti(); setTimeout(() => { jsConfetti.addConfetti() }, 2000); <\/script> </body></html>',j=l=>`<!DOCTYPE html><html> <head> <meta charset="UTF-8"> <link rel="preconnect" href="https://fonts.googleapis.com"> <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin> <link href="https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300&family=Roboto:wght@300;400;500&family=Staatliches&display=swap" rel="stylesheet"> <title>Magic Upload - Error</title> <script src="https://kit.fontawesome.com/9fd6d0c095.js" crossorigin="anonymous"><\/script> </head> <body> <style> * { box-sizing: border-box; } body { max-width: 870px; margin: 0 auto; } .container { text-align: center; font-family: "Roboto", sans-serif; display: flex; justify-content: center; align-items: center; flex-direction: column; height: 90vh; position: relative; color: #363636; padding-left: 5rem; padding-right: 5rem; } h1 { font-family: "Staatliches", cursive; font-size: 48px; margin-bottom: 0; } p { padding: 0 2rem; margin-top: 0; font-size: 18px; line-height: 24px; } .footer { position: absolute; bottom: 1rem; font-size: 14px; opacity: 0.4; } .error, .header > i { color: rgb(229, 45, 45); text-shadow: 0 8px 24px rgb(229 45 45 / 25%); } .tooltip { position: relative; display: inline-block; border-bottom: 1px dotted black; } .tooltip .tooltiptext { font-size: 16px; line-height: 20px; visibility: hidden; width: 120px; bottom: 130%; left: 50%; margin-left: -60px; background-color: rgba(0,0,0,0.9); color: #fff; text-align: center; padding: 5px 0; border-radius: 6px; opacity: 0; transition: .3s; position: absolute; z-index: 1; } .tooltip .tooltiptext::after { content: " "; position: absolute; top: 100%; left: 50%; margin-left: -5px; border-width: 5px; border-style: solid; border-color: #363636 transparent transparent transparent; } .tooltip:hover .tooltiptext { visibility: visible; opacity: 1; } a { color: #363636; transition: .3s; } a:hover{ color: #5e2de5; text-shadow: 0 8px 24px rgb(94 45 229 / 25%); } hr { width: 50px; opacity: 0.5; } .error_container { max-width: 100%; position: relative; } .error_container:hover .error_label { opacity: 0.3; } .error_code { font-size: 14px; background-color: rgba(0,0,0,0.92); border-radius: 6px; padding-top: 2rem; padding-bottom: 2rem; padding-right: 2rem; padding-left: 2rem; color: white; text-align: left; word-wrap: break-word; font-family: 'Roboto Mono', monospace; } .error_label { transition: .3s; cursor: default; font-size: 12px; text-transform: uppercase; opacity: 0; color: white; position: absolute; right: 2rem; top: 1rem; } </style> <div class="container"> <h1 class="header"><i class="fa-solid fa-triangle-exclamation"></i> Uh oh, something went <span class="error">wrong</span> <i class="fa-solid fa-triangle-exclamation"></i></h1> <hr> <p class="about">We weren&#39;t able to connect your Google Drive account with MagicUpload. Please try again or reach out to help in our community discord. </p> <p class="help">Need any help? Checkout our <a href="https://github.com/mack/magic-upload" class="tooltip"> <i class="fa-brands fa-github"></i> <span class="tooltiptext">GitHub</span> </a> or <a href="" class="tooltip"> <i class="fa-brands fa-discord"></i> <span class="tooltiptext">Community Discord</span> </a> . </p> <div class="error_container"> <span class="error_label">OAuth Response // JSON</span> <div class="error_code"> ${l.error_message} </div> </div> <span class="footer">&#169; Mackenzie Boudreau</span> </div> <script src="https://unpkg.com/scrollreveal@4.0.0/dist/scrollreveal.min.js"><\/script> <script src="https://cdn.jsdelivr.net/npm/js-confetti@latest/dist/js-confetti.browser.js"><\/script> <script> const sr = ScrollReveal({ origin: "top", distance: "60px", duration: 2500, delay: 400, }); sr.reveal(".header", {delay: 700}); sr.reveal("hr", {delay: 500}); sr.reveal(".about", {delay: 900, origin: "bottom"}); sr.reveal(".help", {delay: 1000, origin: "bottom"}); sr.reveal(".error_code", {delay: 1000, origin: "bottom"}); sr.reveal(".footer", {delay: 800, origin: "bottom"}); <\/script> </body></html>`,O=()=>{let l=S.useModalsStore.getState().default[0];l&&S.closeModal(l.key)},E=(l,e)=>BdApi.showToast(l,{type:"success",...e}),I=(l,e)=>BdApi.showToast(l,{type:"info",...e}),W=(l,e)=>BdApi.showToast(l,{type:"warning",...e}),$=(l,e)=>BdApi.showToast(l,{type:"error",...e});class q{constructor(e){this.storage=e,this.backlog=[],this.intransit=[]}upload(e){}startStream(e){let s={name:e.name,mimeType:e.type},t={method:"POST",headers:{Authorization:`Bearer ${this.accessToken}`,"Content-Type":"application/json; charset=UTF-8","Content-Length":e.size},body:JSON.stringify(s)};console.log("using access token "+this.accessToken),fetch(A,t).then(i=>{if(i.status==200){let o=i.headers.get("Location");this.chunkUpload(e,o)}else if(i.status==401&&!retry){let{refresh_token:o}=this.getCredentials();o?(r.warn("Access token failed. Attempting to refresh token."),refreshAccessToken(o,({access_token:a})=>{a?(r.log("Successfully refreshed access token."),console.log("new access token"+a),this.updateAccessToken(a),this.uploadFile(e,!0)):(r.err("Something went wrong. Clearing OAuth credentials."),this.deleteCredentials())})):(r.err("Something went wrong. Clearing OAuth credentials."),this.deleteCredentials())}})}}class K{constructor(e){this.pluginName=e}encrypt(e){let{algorithm:s,secretKey:t,iv:i}=n.oauth.storage,o=x.createCipheriv(s,t,i),a=Buffer.concat([o.update(e),o.final()]);return{iv:i.toString("hex"),content:a.toString("hex")}}decrypt(e){let{algorithm:s,secretKey:t}=n.oauth.storage,i=x.createDecipheriv(s,t,Buffer.from(e.iv,"hex"));return Buffer.concat([i.update(Buffer.from(e.content,"hex")),i.final()]).toString()}load(e,s){var t=BdApi.loadData(this.pluginName,e);if(t)return t=JSON.parse(t),t=s?JSON.parse(this.decrypt(t)):t,t}store(e,s,t){var i=JSON.stringify(e);return t&&(i=JSON.stringify(this.encrypt(i))),BdApi.saveData(this.pluginName,s,i),e}delete(e){BdApi.deleteData(this.pluginName,e)}}class J{constructor(e){this.storage=e,this.server=N.createServer((s,t)=>{let{query:i}=M.parse(s.url,!0);console.log("can handle a request"),i.code&&(r.log("Recieved authorization code."),this.requestAccessToken(i.code,o=>{let{access_token:a,refresh_token:c}=o;a&&c?(r.log("Exchanged authorization code for access and refresh tokens."),this.storage.store(o,n.oauth.storage.credentialsKey,!0),t.writeHeader(200,{"Content-Type":"text/html"}),t.write(H()),E("Google Drive connected!",{timeout:5500})):(r.err("Failed to retrieve access and refresh tokens."),t.writeHeader(500,{"Content-Type":"text/html"}),t.write(j({error_message:JSON.stringify(o)})),$("An error occured connecting Google Drive",{timeout:5500})),t.end(),this.shutdownHandler()}))})}activateHandler(e){if(this.server.listening){e();return}let{port:s,host:t}=n.oauth.handler;this.server.listen(s,t,()=>{r.log(`Listening for OAuth redirects on http://${t}:${s}...`),e&&e()})}shutdownHandler(e){this.server.close(e)}requestAccessToken(e,s){let t=new URLSearchParams({client_id:n.oauth.clientId,client_secret:n.oauth.clientSecret,code:e,grant_type:"authorization_code",redirect_uri:`http://${n.oauth.handler.host}:${n.oauth.handler.port}`}).toString();fetch(C,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:t}).then(o=>o.json()).then(o=>{s&&s(o)})}refreshAccessToken(e,s){let t=new URLSearchParams({client_id:n.oauth.clientId,client_secret:n.oauth.clientSecret,refresh_token:e,grant_type:"refresh_token"}).toString();fetch(C,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:t}).then(o=>o.json()).then(o=>{s&&s(o)})}revokeToken(e){let s={method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"}};fetch(F+`?token=${e}`,s).then(t=>{t.status==200?r.log("Token has successfully been revoked."):r.warn("Unable to revoke OAuth token.")})}}return class extends z{optionsWithAuth(e){return e.headers={...e.headers,Authorization:"Bearer "+this.getAccessToken()},e}startOAuthConsentFlow(){this.oauther.activateHandler(()=>{r.log("Sending user to OAuth consent flow."),window.open(R)})}openOAuthPrompt(){BdApi.showConfirmationModal("\u{1F50C} Connect your Google Drive","Magic Upload requires Google Drive. To use this plugin you must connect your Google account.",{confirmText:"Connect Google Account",cancelText:"Disable Plugin",onConfirm:()=>{this.startOAuthConsentFlow()},onCancel:()=>{BdApi.Plugins.disable(this.getName())}})}chunkUpload(e,s){let t=this.getAccessToken();var i=10*256*1024,o=Buffer.alloc(i),a=e.path,c=0;w.open(a,"r",function(k,m){if(k)throw k;let y=()=>{w.read(m,o,0,i,null,(b,f)=>{if(c++,b)throw b;if(f===0){console.log("out of bytes to read..."),w.close(m,function(p){if(p)throw p});return}var u;f<i?(console.log("at the end..."),u=o.slice(0,f)):u=o;let d=new URL(s),v=i*(c-1),U=Math.min(i*c,e.size)-1,Y={host:d.host,path:d.pathname+d.search,search:d.search,href:d.href,method:"PUT",headers:{Authorization:`Bearer ${t}`,"Content-Length":Math.min(u.length,e.size),"Content-Range":`bytes ${v}-${U}/${e.size}`}};console.log("Uploading chunk... #"+c+" range: "+v+"-"+U+" out of "+e.size);var G=D.request(Y,function(p){console.log("statusCode: ",p.statusCode),console.log("headers: ",p.headers),p.on("data",function(V){console.log(p),console.log("BODY: "+V)}),y()});G.write(u),G.end()})};y()})}uploadFile(e,s){let t={name:e.name,mimeType:e.type},i=this.optionsWithAuth({method:"POST",headers:{"Content-Type":"application/json; charset=UTF-8","Content-Length":e.size},body:JSON.stringify(t)});console.log("using access token "+this.getAccessToken()),fetch(A,i).then(o=>{if(o.status==200){let a=o.headers.get("Location");this.chunkUpload(e,a)}else if(o.status==401&&!s){let{refresh_token:a}=this.storage.load(n.oauth.storage.credentialsKey,!0);a?(r.warn("Access token failed. Attempting to refresh token."),refreshAccessToken(a,({access_token:c})=>{c?(r.log("Successfully refreshed access token."),console.log("new access token"+c),this.updateAccessToken(c),this.uploadFile(e,!0)):(r.err("Something went wrong. Clearing OAuth credentials."),this.deleteCredentials())})):(r.err("Something went wrong. Clearing OAuth credentials."),this.deleteCredentials())}})}patchDiscordFileUpload(){r.log("Patching Discord file modules."),h.instead(g,"maxFileSize",(e,s,t)=>{let[i,o]=s;return o==!0?t(i):Number.MAX_VALUE}),h.instead(g,"anyFileTooLarge",()=>!1),h.instead(g,"uploadSumTooLarge",()=>!1),h.instead(g,"getUploadFileSizeSum",()=>0),h.instead(L,"uploadFiles",(e,[s],t)=>{let{uploads:i}=s;i.forEach(o=>{o.item.file.size<this.uploadLimit,this.uploadFile(o.item.file)})})}init(){this.storage=new K(this.getName()),this.oauther=new J(this.storage),this.uploader=new q(this.storage),this.getAccessToken=()=>{let e=this.storage.load(n.oauth.storage.credentialsKey,!0);return e&&e.access_token},this.deleteCredentials=()=>this.storage.delete(n.oauth.storage.credentialsKey),this.uploadLimit=()=>g.maxFileSize(_,!0)}onStart(){this.init(),this.getAccessToken(),this.oauther.activateHandler(()=>{console.log("can start handler")})}onStop(){r.log("MagicUpload has stopped..."),this.oauther.shutdownHandler(),h.unpatchAll()}buildSetting(e){class s extends ZLibrary.Settings.SettingField{constructor(m,y,b,f){let u={display:"flex"},d=BdApi.React.createElement(P,{onClick:f},b);super(m,y,_,v=>BdApi.React.createElement("div",{...v,style:u},d),{})}}let{name:t,note:i,type:o,value:a,onClick:c}=e;return o=="button"?new s(t,i,a,c):super.buildSetting(e)}getSettingsPanel(){let e=this.buildSettingsPanel(),s=this.storage.load(n.oauth.storage.credentialsKey,!0);var t;s?t={controls:[{type:"switch",id:"automatic_file_upload",name:"Automatic file uploading",note:"Do not prompt me when uploading files that exceed the upload limit.",value:!0,onChange:o=>console.log("CHANGINGINSDGINGING")},{type:"switch",id:"rich_embed",name:"Google Drive embeds",note:"Attempt to display an embedded preview of content from google drive links.",value:!0,onChange:o=>console.log("CHANGINGINSDGINGING")},{type:"textbox",id:"access_token",name:"Google Drive access token",note:"This value is immutable.",value:s?s.access_token:""},{type:"textbox",id:"refresh_token",name:"Google Drive refresh token",note:"This value is immutable.",value:s?s.refresh_token:""},{type:"button",value:"Unlink Google Drive",onClick:()=>{this.oauther.revokeToken(s.refresh_token),this.deleteCredentials(),I("Google Drive has been unlinked.",{timeout:5500}),O()}}]}:t={description:`\u{1F50C} Hello! It looks like you haven't given access to your Google Drive. 
                        This plugin <i>requires</i> you to sign in with Google in order to function.`,controls:[{type:"button",value:"Connect Google Account",onClick:()=>{this.startOAuthConsentFlow(),O()}}]},t.controls.forEach(o=>e.append(this.buildSetting(o)));let i=e.getElement();if(t.description){let o=document.createElement("p");o.style=`
                    color: rgb(185, 187, 190);
                    font-size: 16px;
                    line-height: 18px;
                    margin-top: 0;
                    margin-bottom: 0.85rem;
                `,o.innerHTML=t.description,i.prepend(o)}return i}}};
        return plugin(Plugin, Api);
    })(global.ZeresPluginLibrary.buildPlugin(config));
})();