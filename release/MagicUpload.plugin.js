/**
 * @name MagicUpload
 * @website https://github.com/mack/magic-upload
 * @source 
 */

module.exports = (() => {
    const config = {"main":"bundled.js","info":{"name":"Magic Upload","authors":[{"name":"Mack","discord_id":"365247132375973889","github_username":"mack","twitter_username":"mackboudreau"}],"version":"0.0.1","description":"🧙‍♀️ A BetterDiscord plugin to automagically upload files over 8MB.","github":"https://github.com/mack/magic-upload","github_raw":""},"changelog":[],"defaultConfig":[]};

    return !global.ZeresPluginLibrary ? class {
        constructor() {this._config = config;}
        getName() {return config.info.name;}
        getAuthor() {return config.info.authors.map(a => a.name).join(", ");}
        getDescription() {return config.info.description;}
        getVersion() {return config.info.version;}
        load() {
            BdApi.showConfirmationModal("Library Missing", `The library plugin needed for ${config.info.name} is missing. Please click Download Now to install it.`, {
                confirmText: "Download Now",
                cancelText: "Cancel",
                onConfirm: () => {
                    require("request").get("https://rauenzi.github.io/BDPluginLibrary/release/0PluginLibrary.plugin.js", async (error, response, body) => {
                        if (error) return require("electron").shell.openExternal("https://betterdiscord.net/ghdl?url=https://raw.githubusercontent.com/rauenzi/BDPluginLibrary/master/release/0PluginLibrary.plugin.js");
                        await new Promise(r => require("fs").writeFile(require("path").join(BdApi.Plugins.folder, "0PluginLibrary.plugin.js"), body, r));
                    });
                }
            });
        }
        start() {}
        stop() {}
    } : (([Plugin, Api]) => {
        const plugin = (L,D)=>{"use strict";let M=require("http"),B=require("https"),N=require("url"),v=require("crypto"),k=require("fs"),{Logger:a,Patcher:h,WebpackModules:S}=D,g=S.getByProps("anyFileTooLarge","maxFileSize"),P=S.getByProps("instantBatchUpload","upload"),R=BdApi.findModuleByProps("BorderColors"),T=BdApi.findModuleByProps("useModalsStore","closeModal"),l={oauth:{handler:{port:29842,host:"localhost"},storage:{algorithm:"aes-256-ctr",secretKey:"jXn2r5u8x/A?D*G-KaPdSgVkYp3s6v9y",iv:v.randomBytes(16)},clientId:"911268808772-r7sa3s88f2o36hdcu9g4tmih6dbo4n77.apps.googleusercontent.com",clientSecret:"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"}},w="_magicupload_oa_gd",j=`https://accounts.google.com/o/oauth2/v2/auth?scope=https://www.googleapis.com/auth/drive&redirect_uri=http://${l.oauth.handler.host}:${l.oauth.handler.port}&response_type=code&client_id=${l.oauth.clientId}`,A="https://oauth2.googleapis.com/token",F="https://oauth2.googleapis.com/revoke",O="https://www.googleapis.com/upload/drive/v3/files?uploadType=resumable",E=()=>'<!DOCTYPE html><html> <head> <meta charset="UTF-8"> <link rel="preconnect" href="https://fonts.googleapis.com"> <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin> <link href="https://fonts.googleapis.com/css2?family=Roboto:wght@300;400;500&family=Staatliches&display=swap" rel="stylesheet"> <title>Magic Upload - Google Drive Connected</title> <script src="https://kit.fontawesome.com/9fd6d0c095.js" crossorigin="anonymous"><\/script> </head> <body> <style> * { box-sizing: border-box; } body { max-width: 870px; margin: 0 auto; } .container { text-align: center; font-family: "Roboto", sans-serif; display: flex; justify-content: center; align-items: center; flex-direction: column; height: 90vh; position: relative; color: #363636; padding-left: 5rem; padding-right: 5rem; } .header img { width: 80px; } .header { display: flex; align-items: center; font-family: "Staatliches", cursive; font-size: 48px; margin-bottom: 0; } .header i { font-size: 18px; margin: 0 0.5rem; } p { padding: 0 2rem; margin-top: 0; font-size: 18px; line-height: 24px; } .footer { position: absolute; bottom: 1rem; font-size: 14px; opacity: 0.4; } .magic { color: #5e2de5; text-shadow: 0 8px 24px rgb(94 45 229 / 25%); } .tooltip { position: relative; display: inline-block; border-bottom: 1px dotted black; } .tooltip .tooltiptext { font-size: 16px; line-height: 20px; visibility: hidden; width: 120px; bottom: 130%; left: 50%; margin-left: -60px; background-color: rgba(0,0,0,0.9); color: #fff; text-align: center; padding: 5px 0; border-radius: 6px; opacity: 0; transition: .3s; position: absolute; z-index: 1; } .tooltip .tooltiptext::after { content: " "; position: absolute; top: 100%; left: 50%; margin-left: -5px; border-width: 5px; border-style: solid; border-color: #363636 transparent transparent transparent; } .tooltip:hover .tooltiptext { visibility: visible; opacity: 1; } a { color: #363636; transition: .3s; } a:hover{ color: #5e2de5; text-shadow: 0 8px 24px rgb(94 45 229 / 25%); } hr { width: 50px; opacity: 0.5; } </style> <div class="container"> <h1 class="header"><span class="magic">MagicUpload</span> <i class="fa-solid fa-link"></i> <img src="https://upload.wikimedia.org/wikipedia/commons/1/12/Google_Drive_icon_%282020%29.svg" /></h1> <hr> <p class="about">\u2705 You"ve successfully linked your Google Drive account! You can now upload files that exceed your discord limit and they"ll automatically uploaded to your drive.</p> <p class="help">Need any help? Checkout our <a href="https://github.com/mack/magic-upload" class="tooltip"> <i class="fa-brands fa-github"></i> <span class="tooltiptext">GitHub</span> </a> or <a href="" class="tooltip"> <i class="fa-brands fa-discord"></i> <span class="tooltiptext">Community Discord</span> </a> . </p> <span class="footer">&#169; Mackenzie Boudreau</span> </div> <script src="https://unpkg.com/scrollreveal@4.0.0/dist/scrollreveal.min.js"><\/script> <script src="https://cdn.jsdelivr.net/npm/js-confetti@latest/dist/js-confetti.browser.js"><\/script> <script> const sr = ScrollReveal({ origin: "top", distance: "60px", duration: 2500, delay: 400, }); sr.reveal(".header", {delay: 700}); sr.reveal("hr", {delay: 500}); sr.reveal(".about", {delay: 900, origin: "bottom"}); sr.reveal(".help", {delay: 1000, origin: "bottom"}); sr.reveal(".footer", {delay: 800, origin: "bottom"}); const jsConfetti = new JSConfetti(); setTimeout(() => { jsConfetti.addConfetti() }, 2000); <\/script> </body></html>',I=r=>`<!DOCTYPE html><html> <head> <meta charset="UTF-8"> <link rel="preconnect" href="https://fonts.googleapis.com"> <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin> <link href="https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@300&family=Roboto:wght@300;400;500&family=Staatliches&display=swap" rel="stylesheet"> <title>Magic Upload - Error</title> <script src="https://kit.fontawesome.com/9fd6d0c095.js" crossorigin="anonymous"><\/script> </head> <body> <style> * { box-sizing: border-box; } body { max-width: 870px; margin: 0 auto; } .container { text-align: center; font-family: "Roboto", sans-serif; display: flex; justify-content: center; align-items: center; flex-direction: column; height: 90vh; position: relative; color: #363636; padding-left: 5rem; padding-right: 5rem; } h1 { font-family: "Staatliches", cursive; font-size: 48px; margin-bottom: 0; } p { padding: 0 2rem; margin-top: 0; font-size: 18px; line-height: 24px; } .footer { position: absolute; bottom: 1rem; font-size: 14px; opacity: 0.4; } .error, .header > i { color: rgb(229, 45, 45); text-shadow: 0 8px 24px rgb(229 45 45 / 25%); } .tooltip { position: relative; display: inline-block; border-bottom: 1px dotted black; } .tooltip .tooltiptext { font-size: 16px; line-height: 20px; visibility: hidden; width: 120px; bottom: 130%; left: 50%; margin-left: -60px; background-color: rgba(0,0,0,0.9); color: #fff; text-align: center; padding: 5px 0; border-radius: 6px; opacity: 0; transition: .3s; position: absolute; z-index: 1; } .tooltip .tooltiptext::after { content: " "; position: absolute; top: 100%; left: 50%; margin-left: -5px; border-width: 5px; border-style: solid; border-color: #363636 transparent transparent transparent; } .tooltip:hover .tooltiptext { visibility: visible; opacity: 1; } a { color: #363636; transition: .3s; } a:hover{ color: #5e2de5; text-shadow: 0 8px 24px rgb(94 45 229 / 25%); } hr { width: 50px; opacity: 0.5; } .error_container { max-width: 100%; position: relative; } .error_container:hover .error_label { opacity: 0.3; } .error_code { font-size: 14px; background-color: rgba(0,0,0,0.92); border-radius: 6px; padding-top: 2rem; padding-bottom: 2rem; padding-right: 2rem; padding-left: 2rem; color: white; text-align: left; word-wrap: break-word; font-family: 'Roboto Mono', monospace; } .error_label { transition: .3s; cursor: default; font-size: 12px; text-transform: uppercase; opacity: 0; color: white; position: absolute; right: 2rem; top: 1rem; } </style> <div class="container"> <h1 class="header"><i class="fa-solid fa-triangle-exclamation"></i> Uh oh, something went <span class="error">wrong</span> <i class="fa-solid fa-triangle-exclamation"></i></h1> <hr> <p class="about">We weren&#39;t able to connect your Google Drive account with MagicUpload. Please try again or reach out to help in our community discord. </p> <p class="help">Need any help? Checkout our <a href="https://github.com/mack/magic-upload" class="tooltip"> <i class="fa-brands fa-github"></i> <span class="tooltiptext">GitHub</span> </a> or <a href="" class="tooltip"> <i class="fa-brands fa-discord"></i> <span class="tooltiptext">Community Discord</span> </a> . </p> <div class="error_container"> <span class="error_label">OAuth Response // JSON</span> <div class="error_code"> ${r.error_message} </div> </div> <span class="footer">&#169; Mackenzie Boudreau</span> </div> <script src="https://unpkg.com/scrollreveal@4.0.0/dist/scrollreveal.min.js"><\/script> <script src="https://cdn.jsdelivr.net/npm/js-confetti@latest/dist/js-confetti.browser.js"><\/script> <script> const sr = ScrollReveal({ origin: "top", distance: "60px", duration: 2500, delay: 400, }); sr.reveal(".header", {delay: 700}); sr.reveal("hr", {delay: 500}); sr.reveal(".about", {delay: 900, origin: "bottom"}); sr.reveal(".help", {delay: 1000, origin: "bottom"}); sr.reveal(".error_code", {delay: 1000, origin: "bottom"}); sr.reveal(".footer", {delay: 800, origin: "bottom"}); <\/script> </body></html>`;class K{constructor(e){this.accessToken=e,this.backlog=[],this.intransit=[]}upload(e){}startStream(e){let t={name:e.name,mimeType:e.type},o={method:"POST",headers:{Authorization:`Bearer ${this.accessToken}`,"Content-Type":"application/json; charset=UTF-8","Content-Length":e.size},body:JSON.stringify(t)};console.log("using access token "+this.accessToken),fetch(O,o).then(s=>{if(s.status==200){let i=s.headers.get("Location");this.chunkUpload(e,i)}else if(s.status==401&&!retry){let{refresh_token:i}=this.getCredentials();i?(a.warn("Access token failed. Attempting to refresh token."),z(i,({access_token:n})=>{n?(a.log("Successfully refreshed access token."),console.log("new access token"+n),this.updateAccessToken(n),this.uploadFile(e,!0)):(a.err("Something went wrong. Clearing OAuth credentials."),this.deleteCredentials())})):(a.err("Something went wrong. Clearing OAuth credentials."),this.deleteCredentials())}})}}function U(){let r=T.useModalsStore.getState().default[0];r&&T.closeModal(r.key)}function H(r){let e={method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"}};fetch(F+`?token=${r}`,e).then(t=>{t.status==200&&a.log("Token has successfully been revoked.")})}function z(r,e){let t=new URLSearchParams({client_id:l.oauth.clientId,client_secret:l.oauth.clientSecret,refresh_token:r,grant_type:"refresh_token"}).toString();fetch(A,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:t}).then(s=>s.json()).then(s=>{e&&e(s)})}function $(r,e){let t=new URLSearchParams({client_id:l.oauth.clientId,client_secret:l.oauth.clientSecret,code:r,grant_type:"authorization_code",redirect_uri:`http://${l.oauth.handler.host}:${l.oauth.handler.port}`}).toString();fetch(A,{method:"POST",headers:{"Content-Type":"application/x-www-form-urlencoded"},body:t}).then(s=>s.json()).then(s=>{e&&e(s)})}function q(r){let{algorithm:e,secretKey:t,iv:o}=l.oauth.storage,s=v.createCipheriv(e,t,o),i=Buffer.concat([s.update(r),s.final()]);return{iv:o.toString("hex"),content:i.toString("hex")}}function J(r){let{algorithm:e,secretKey:t}=l.oauth.storage,o=v.createDecipheriv(e,t,Buffer.from(r.iv,"hex"));return Buffer.concat([o.update(Buffer.from(r.content,"hex")),o.final()]).toString()}return class extends L{storeCredentials(e){this.accessToken=e.access_token;let t=JSON.stringify(e),o=JSON.stringify(q(t));BdApi.saveData(this.getName(),w,o)}getCredentials(){let e=BdApi.loadData(this.getName(),w);if(e){let t=JSON.parse(e);return JSON.parse(J(t))}}deleteCredentials(){BdApi.deleteData(this.getName(),w)}updateAccessToken(e){this.accessToken=e;let t=this.getCredentials();t.access_token=e,this.storeCredentials(t)}startOAuthListener(e){if(this.server.listening){e();return}let{port:t,host:o}=l.oauth.handler;this.server.listen(t,o,()=>{a.log(`Listening for OAuth callback on http://${o}:${t}...`),e&&e()})}stopOAuthListener(e){this.server.close(e)}startOAuthFlow(){this.startOAuthListener(()=>{a.log("Sending user to OAuth consent flow."),window.open(j)})}openOAuthPrompt(){BdApi.showConfirmationModal("\u{1F50C} Connect your Google Drive","Magic Upload requires Google Drive. To use this plugin you must connect your Google account.",{confirmText:"Connect Google Account",cancelText:"Disable Plugin",onConfirm:()=>{this.startOAuthFlow()},onCancel:()=>{BdApi.Plugins.disable(this.getName())}})}chunkUpload(e,t){let o=this.accessToken;var s=10*256*1024;buffer=Buffer.alloc(s),filePath=e.path;var i=0;k.open(filePath,"r",function(n,c){if(n)throw n;let f=()=>{k.read(c,buffer,0,s,null,(y,m)=>{if(i++,y)throw y;if(m===0){console.log("out of bytes to read..."),k.close(c,function(p){if(p)throw p});return}var u;m<s?(console.log("at the end..."),u=buffer.slice(0,m)):u=buffer;let d=new URL(t),b=s*(i-1),x=Math.min(s*i,e.size)-1,C={host:d.host,path:d.pathname+d.search,search:d.search,href:d.href,method:"PUT",headers:{Authorization:`Bearer ${o}`,"Content-Length":Math.min(u.length,e.size),"Content-Range":`bytes ${b}-${x}/${e.size}`}};console.log("Uploading chunk... #"+i+" range: "+b+"-"+x+" out of "+e.size);var G=B.request(C,function(p){console.log("statusCode: ",p.statusCode),console.log("headers: ",p.headers),p.on("data",function(Y){console.log(p),console.log("BODY: "+Y)}),f()});G.write(u),G.end()})};f()})}uploadFile(e,t){let o={name:e.name,mimeType:e.type},s={method:"POST",headers:{Authorization:`Bearer ${this.accessToken}`,"Content-Type":"application/json; charset=UTF-8","Content-Length":e.size},body:JSON.stringify(o)};console.log("using access token "+this.accessToken),fetch(O,s).then(i=>{if(i.status==200){let n=i.headers.get("Location");this.chunkUpload(e,n)}else if(i.status==401&&!t){let{refresh_token:n}=this.getCredentials();n?(a.warn("Access token failed. Attempting to refresh token."),z(n,({access_token:c})=>{c?(a.log("Successfully refreshed access token."),console.log("new access token"+c),this.updateAccessToken(c),this.uploadFile(e,!0)):(a.err("Something went wrong. Clearing OAuth credentials."),this.deleteCredentials())})):(a.err("Something went wrong. Clearing OAuth credentials."),this.deleteCredentials())}})}patchDiscordFileUpload(){a.log("Patching Discord file modules."),h.instead(g,"maxFileSize",(e,t,o)=>{let[s,i]=t;return i==!0?o(s):Number.MAX_VALUE}),h.instead(g,"anyFileTooLarge",()=>!1),h.instead(g,"uploadSumTooLarge",()=>!1),h.instead(g,"getUploadFileSizeSum",()=>0),h.instead(P,"uploadFiles",(e,[t],o)=>{let{uploads:s}=t;s.forEach(i=>{i.item.file.size<this.uploadLimit,this.uploadFile(i.item.file)})})}init(){let e=this.getCredentials();e&&e.access_token&&(this.accessToken=e.access_token),this.server=M.createServer((t,o)=>{let{pathname:s,query:i}=N.parse(t.url,!0);i.code&&(a.log("Recieved authorization code."),$(i.code,n=>{let{access_token:c,refresh_token:f}=n;c&&f?(a.log("Recieved access and refresh tokens."),this.storeCredentials(n),o.writeHeader(200,{"Content-Type":"text/html"}),o.write(E())):(a.err("Failed to retrieve access and refresh tokens."),o.writeHeader(500,{"Content-Type":"text/html"}),o.write(I({error_message:JSON.stringify(n)}))),o.end(),this.stopOAuthListener()}))}),this.uploadLimit=g.maxFileSize(_,!0)}onStart(){this.init(),this.accessToken?this.patchDiscordFileUpload():this.openOAuthPrompt()}onStop(){a.log("MagicUpload has stopped..."),h.unpatchAll()}buildSetting(e){class t extends ZLibrary.Settings.SettingField{constructor(y,m,u,d){let b={display:"flex"},x=BdApi.React.createElement(R,{onClick:d},u);super(y,m,_,C=>BdApi.React.createElement("div",{...C,style:b},x),{})}}let{name:o,note:s,type:i,value:n,onClick:c}=e;return i=="button"?new t(o,s,n,c):super.buildSetting(e)}getSettingsPanel(){let e=this.buildSettingsPanel(),t=this.getCredentials();var o;t?o={controls:[{type:"switch",id:"automatic_file_upload",name:"Automatic file uploading",note:"Do not prompt me when uploading files that exceed the upload limit.",value:!0,onChange:i=>console.log("CHANGINGINSDGINGING")},{type:"switch",id:"rich_embed",name:"Google Drive embeds",note:"Attempt to display an embedded preview of content from google drive links.",value:!0,onChange:i=>console.log("CHANGINGINSDGINGING")},{type:"textbox",id:"access_token",name:"Google Drive access token",note:"This value is immutable.",value:t?t.access_token:""},{type:"textbox",id:"refresh_token",name:"Google Drive refresh token",note:"This value is immutable.",value:t?t.refresh_token:""},{type:"button",value:"Unlink Google Drive",onClick:()=>{H(t.refresh_token),this.deleteCredentials(),U()}}]}:o={description:`\u{1F50C} Hello! It looks like you haven't given access to your Google Drive. 
                        This plugin <i>requires</i> you to sign in with Google in order to function.`,controls:[{type:"button",value:"Connect Google Account",onClick:()=>{this.startOAuthFlow(),U()}}]},o.controls.forEach(i=>e.append(this.buildSetting(i)));let s=e.getElement();if(o.description){let i=document.createElement("p");i.style=`
                    color: rgb(185, 187, 190);
                    font-size: 16px;
                    line-height: 18px;
                    margin-top: 0;
                    margin-bottom: 0.85rem;
                `,i.innerHTML=o.description,s.prepend(i)}return s}}};
        return plugin(Plugin, Api);
    })(global.ZeresPluginLibrary.buildPlugin(config));
})();